# This is a basic workflow to help you get started with Actions

name: Build and Test RPM

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
env:
  MAJ_VERSION: "1"
  MIN_VERSION: "1"
  YOUR_APP_NAME: "rhelhostinfo"
  YOUR_APP_COMMAND: "rhelhostinfo"

jobs:
  build_for_rhel8:
    runs-on: ubuntu-latest
    container: rockylinux:latest
    steps:
      - uses: actions/checkout@v3 # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      #- uses: actions/setup-python@v2 # sets up python per the version below
      #  with:
      #    python-version: 3.9

      - name: setup notification
        run: echo "starting setup"
        
      - name: Install packages
        run: |
            yum makecache --refresh
            yum -y install wget nmap rpm python39
            python3 -V

      - name: setup environment
        run: |
            python3 -m pip install --upgrade pip wheel setuptools python-dev-tools xcffib cairocffi tornado 
            python3 -m pip install --upgrade -r requirements.txt
            rm -rf $GITHUB_WORKSPACE/sast
            rm -rf $GITHUB_WORKSPACE/pytest
  
      - name: build notification
        run: echo "starting rpm build"
 
      - name: build
        run: rpmbuild -bb -vv --clean $GITHUB_WORKSPACE/rpmbuild/rhelhostinfo.spec --define "_rpmdir $GITHUB_WORKSPACE/current_rpms/" --define "_sourcedir $GITHUB_WORKSPACE"
            
      - name: artifact notification
        run: echo "starting artifact upload"
            
      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: ${{ env.YOUR_APP_NAME }}-${{ env.MAJ_VERSION }}-${{ env.MIN_VERSION }}.el8.rpm
          path: current_rpms/
      
      - name: upload notification
        run: echo "rpm for RHEL8 uploaded as an artifact"
        
  build_for_rhel7:
    runs-on: ubuntu-18.04
    container: centos:centos7
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: setup notification
        run: echo "starting setup"
        
      - name: Install packages
        run: |
            yum -y install wget upx nmap rpm gcc

      - name: setup environment
        run: |
            wget https://www.python.org/ftp/python/3.9.5/Python-3.9.5.tgz
            tar xvf Python-3.9.5.tgz
            cd Python-3.9*/
            ./configure --enable-optimizations --enable-shared LDFLAGS="-Wl,-rpath /usr/local/lib" --enable-loadable-sqlite-extensions
            make altinstall
            cd $GITHUB_WORKSPACE
            alternatives --install /usr/bin/python3 python3 /usr/local/bin/python3.9 3
            alternatives --set python3 /usr/local/bin/python3.9
            python3 -m pip install --upgrade pip wheel setuptools python-dev-tools xcffib cairocffi tornado 
            python3 -m pip install --upgrade -r requirements.txt
            rm -rf $GITHUB_WORKSPACE/sast
            rm -rf $GITHUB_WORKSPACE/pytest
  
      - name: build notification
        run: echo "starting rpm build"
 
      - name: build
        run: rpmbuild -bb -vv --clean $GITHUB_WORKSPACE/rpmbuild/rhelhostinfo.spec --define "_rpmdir $GITHUB_WORKSPACE/current_rpms/" --define "_sourcedir $GITHUB_WORKSPACE"
            
      - name: artifact notification
        run: echo "starting artifact upload"
            
      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: ${{ env.YOUR_APP_NAME }}-${{ env.MAJ_VERSION }}-${{ env.MIN_VERSION }}.el7.rpm
          path: current_rpms/
      
      - name: upload notification
        run: echo "rpm for RHEL7 uploaded as an artifact"
